
<% title = 'Booking Calendar' %>

<div class="mb-4 flex items-center justify-between">
  <h1 class="text-2xl font-bold">Booking Calendar</h1>
</div>
<div id="calendar" class="bg-white rounded shadow p-4"></div>

<!-- Booking Modal -->
<div id="booking-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
  <div class="bg-white p-6 rounded shadow w-96">
    <h2 class="text-xl font-semibold mb-4">Booking</h2>
    <form id="booking-form" class="space-y-4">
      <input type="hidden" name="eventId" />
      <select name="room" required class="w-full p-2 border rounded"></select>
      <input name="guestEmail" type="email" placeholder="Guest Email" required class="w-full p-2 border rounded" />
      <input name="startDate"   type="date" required class="w-full p-2 border rounded" />
      <input name="endDate"     type="date" required class="w-full p-2 border rounded" />
      <div class="flex justify-end space-x-2">
        <button type="button" id="booking-cancel-btn" class="px-4 py-2">Cancel</button>
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
      </div>
    </form>
  </div>
</div>

<% scripts = `
<script>
document.addEventListener('DOMContentLoaded', async () => {
  // populate room select
  const rooms = await authFetch('/api/rooms').then(r=>r.json());
  const roomSelect = document.querySelector('#booking-form select[name="room"]');
  rooms.forEach(r => {
    const o = document.createElement('option');
    o.value = r._id;
    o.text  = \`\${r.number} (\${r.type})\`;
    roomSelect.add(o);
  });

  const calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
    initialView: 'dayGridMonth',
    headerToolbar: { left:'prev,next today', center:'title', right:'dayGridMonth,timeGridWeek,listWeek' },
    editable: true,
    selectable: true,
    events:  '/api/bookings',
    select(info) {
      openModal({ start: info.startStr, end: info.endStr });
    },
    eventDrop(info)   { updateDate(info.event); },
    eventResize(info) { updateDate(info.event); },
    eventClick(info) {
      if (confirm('Cancel booking?')) {
        authFetch(\`/api/bookings/\${info.event.id}\`,{method:'DELETE'})
          .then(()=>calendar.refetchEvents());
      }
    }
  });
  calendar.render();

  const form  = document.getElementById('booking-form');
  const modal = document.getElementById('booking-modal');

  function openModal({ start, end, id, title }={}) {
    form.reset();
    form['startDate'].value = start;
    form['endDate'].value   = end;
    form['eventId'].value   = id||'';
    form['guestEmail'].value = title||'';
    modal.classList.remove('hidden');
  }

  document.getElementById('booking-cancel-btn').onclick = () => modal.classList.add('hidden');

  form.onsubmit = async e => {
    e.preventDefault();
    const id = form['eventId'].value;
    const body = JSON.stringify({
      room:       form['room'].value,
      guestEmail: form['guestEmail'].value,
      startDate:  form['startDate'].value,
      endDate:    form['endDate'].value
    });
    if (id) {
      await authFetch(\`/api/bookings/\${id}\`, { method:'PUT', body });
    } else {
      await authFetch('/api/bookings', { method:'POST', body });
    }
    modal.classList.add('hidden');
    calendar.refetchEvents();
  };

  async function updateDate(ev) {
    await authFetch(\`/api/bookings/\${ev.id}\`, {
      method:'PUT',
      body: JSON.stringify({ startDate:ev.startStr, endDate:ev.endStr })
    });
  }
});
</script>
` %>
